api:
  enabled: true

sources:
  metrics:
    type: "file"
    include:
      - /etc/vector/logs/example_logs*

transforms:
  initial_log_parse:
    type: remap
    inputs:
      - metrics
    source: |-
      parsed_json = parse_json!(.message)
      
      metrics = parsed_json.metrics
      metricFamily = parsed_json.metricFamily
      
      del(.message)
      del(.metrics)
      del(._line)
      del(.componentName)
      del(.cycleTimestampMS)
      del(.dcmID)
      del(.deviceItemID)
      del(.headers)
      del(.message_key)
      del(.metricFamily)
      del(.metricFamilyDisplayName)
      del(.offset)
      del(.partition)
      del(.pollGroupID)
      del(.pollRateMS)
      del(.readTimestampMS)
      del(.source_type)
      del(.itemID)
      del(.tags)
      del(.tenantID)
      del(.version)
            
      if metricFamily == "NormalizedPortInfo" {
          .availability = metrics.Availability
          .bitsIn = metrics.BitsIn
          .bitsPerSecondIn = metrics.BitsPerSecondIn
          .bitsOut = metrics.BitsOut
          .bitsPerSecondOut = metrics.BitsPerSecondOut
          .utilizationIn = metrics.UtilizationIn
          .utilizationOut = metrics.UtilizationOut
      } else if .metricFamily == "NormalizedMemoryInfo" {
          .CPUMemoryKernelUsage = metrics.CPUMemoryKernelUsage
          .Free = metrics.Free
          .MemoryCommitted = metrics.MemoryCommitted
          .Total = metrics.Total
          .Used = metrics.Used
          .Utilization = metrics.Utilization
      }
      if exists(.ifAlias) {
          .ifAlias = replace!(.ifAlias, " ", "_")
          .ifAlias = replace(.ifAlias, "|", "")
          .ifAlias = replace(.ifAlias, "__", "_")
      }
      if exists(.ifDescr) {
          .ifDescr = replace!(.ifDescr, " ", "_")
          .ifDescr = replace(.ifDescr, "-", "_")
          .ifDescr = replace(.ifDescr, "__", "_")
          .ifDescr = replace(.ifDescr, ":", "_")
      }
      
      .metricFamily = metricFamily
      .ifAlias      = .ifAlias
      .ifDescr      = .ifDescr

  log_route:
    type: route
    reroute_unmatched: true
    inputs:
      - initial_log_parse
    route:
      NormalizedPortInfo: .metricFamily == "NormalizedPortInfo"
      NormalizedMemoryInfo: .metricFamily == "NormalizedMemoryInfo"

  normalized_virtual_memory_info_metric:
    inputs:
      - log_route.NormalizedMemoryInfo
    type: log_to_metric
    metrics:
      - type: gauge
        field: .CPUMemoryKernelUsage
        name: bpc_snmppoll_cpu_memory_kernel_usage
      - type: gauge
        field: .MemoryCommitted
        name: bpc_snmppoll_memory_committed
      - type: gauge
        field: .Free
        name: bpc_snmppoll_free
      - type: gauge
        field: .Total
        name: bpc_snmppoll_total
      - type: gauge
        field: .Used
        name: bpc_snmppoll_used
      - type: gauge
        field: .Total
        name: bpc_snmppoll_total
      - type: gauge
        field: .Utilization
        name: bpc_snmppoll_utilization

  normalized_port_info_metric:
    inputs:
      - log_route.NormalizedPortInfo
    type: log_to_metric
    metrics:
      - type: gauge
        field: .availability
        name: bpc_snmppoll_availability

      - type: gauge
        field: .bitsIn
        name: bpc_snmppoll_bits_in

      - type: gauge
        field: .bitsPerSecondIn
        name: bpc_snmppoll_bits_per_second_in

      - type: gauge
        field: .bitsOut
        name: bpc_snmppoll_bits_out

      - type: gauge
        field: .bitsPerSecondOut
        name: bpc_snmppoll_bits_per_second_out

      - type: gauge
        field: .utilizationIn
        name: bpc_snmppoll_utilization_in

      - type: gauge
        field: .utilizationOut
        name: bpc_snmppoll_utilization_out


sinks:
  debug:
    type: console
    inputs:
      - log_route.NormalizedMemoryInfo
      - log_route.NormalizedPortInfo
    encoding:
      codec: json

  prometheus_exporter:
    type: prometheus_exporter
    inputs:
      - normalized_virtual_memory_info_metric
      - normalized_port_info_metric
    address: 0.0.0.0:9095
